What happens when you initialize a repository? Why do you need to do it?
You need to initialize a repository in order to use Git. In this initial state no commits have been created, so if we were to enter 'git log', we would get an error message. 'git status' brings back all the files in the current repository where .git was initialized - all these files start off with an 'untracked' status.

How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is where you add files. You can just add one file or you can add multiple files in this area. It is useful to add multiple files if they are related in some way. If you add multiple files to the staging area, commits will be made on these simultaneously.

How can you use the staging area to make sure you have one commit per logical change?
The staging area could be thought of as a sort of 'in-between' zone where you can add files, but don't necessarily have to commit them. Before you decide to commit a file/some files, you can first compare any differences between the working directory and the staging area, using 'git diff', or compare the staging area with the most recent commit in the repository, ujsing 'git diff --staged'.